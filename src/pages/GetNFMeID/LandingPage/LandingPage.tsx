import React from "react";
import { Box, Button, Image, Heading, Flex, Text, Spacer, useColorMode } from "@chakra-ui/react";
import { useWallet } from "@solana/wallet-adapter-react";
import { useNavigate } from "react-router-dom";
import darkNfMeIDVaultHero from "assets/img/landing/nfme/dark-hero-nfme-landing-page.jpg";
import liteNfMeIDVaultHero from "assets/img/landing/nfme/lite-hero-nfme-landing-page.jpg";
import solIcon from "assets/img/sol-logo.png";
import { gtagGo } from "libs/utils";
import { NFMeIDMintOptions } from "components/Dashboard/NFMeIDMintOptions";

export const LandingPage = ({ onShowConnectWalletModal }: { onShowConnectWalletModal?: any }) => {
  const { colorMode } = useColorMode();

  return (
    <Box mb="10">
      <Box width={{ base: "90%", md: "80%" }} textAlign={{ base: "center", md: "center" }} m="auto" pt="10">
        <Heading as="h1" size={{ base: "xl", md: "xl" }} fontFamily="Clash-Regular" mt="5">
          NFMe ID +{" "}
          <Text as="span" color="teal.200">
            Liveliness Reputation Staking
          </Text>{" "}
        </Heading>
        <Heading as="h2" size={{ base: "lg", md: "lg" }} fontFamily="Clash-Regular" mt="2" opacity="0.6">
          Farm Your Reputation For Rewards
        </Heading>

        <Box w="80%" m="auto" mt="8">
          <ClaimCTAs onShowConnectWalletModal={onShowConnectWalletModal} />
        </Box>

        <Box mt="20">
          <Heading as="h2" color="teal.200" fontWeight="bold" fontSize="3xl" fontFamily="Clash-Regular">
            What is NFMe ID?
          </Heading>
        </Box>

        <Flex flexDirection={{ base: "column", md: "row" }} justifyContent="center" alignItems={{ base: "center", md: "normal" }} mt="10">
          <Box border="1px solid" borderColor="teal.400" borderRadius="lg" p="5" mx={{ base: "0", md: "5" }} my={{ base: "5", md: "0" }} width="320px">
            <Heading as="h2" color="teal.200" fontWeight="bold" fontSize="2xl" fontFamily="Clash-Regular">
              Your Gateway Into the Itheum Protocol{" "}
            </Heading>
            <Text fontSize="lg" mt="1rem" fontFamily="Clash-Regular">
              NFMe ID Vaults are special Data NFTs that anyone can mint to prove their on-chain reputation. <br />
              <br />
              Minting an NFMe ID requires a fully refundable $ITHEUM bond, which signals your on-chain {`'Liveliness'`} reputation. <br />
            </Text>
          </Box>

          <Box border="1px solid" borderColor="teal.400" borderRadius="lg" p="5" mx={{ base: "0", md: "5" }} my={{ base: "5", md: "0" }} width="320px">
            <Heading as="h2" color="teal.200" fontWeight="bold" fontSize="2xl" fontFamily="Clash-Regular">
              Farm Reputation Staking Rewards
            </Heading>
            <Text fontSize="lg" mt="1rem" fontFamily="Clash-Regular">
              Farming your Liveliness reputation will earn you $ITHEUM rewards as staking APR.
              <br />
              <br />
              Encouraging you to build your on-chain reputation whilst you share in the real-yield generated by data trading on the Itheum protocol.
            </Text>
          </Box>

          <Box border="1px solid" borderColor="teal.400" borderRadius="lg" p="5" mx={{ base: "0", md: "5" }} my={{ base: "5", md: "0" }} width="320px">
            <Heading as="h2" color="teal.200" fontWeight="bold" fontSize="2xl" fontFamily="Clash-Regular">
              Connect your {`"Personas"`}, Boost Your Rewards
            </Heading>
            <Text fontSize="lg" mt="1rem" fontFamily="Clash-Regular">
              Each free mint gives you a unique NFMe ID with randomly generated layers, some potentially rare.
              <br />
              <br />
              Mint as many as you like for diverse web3 personas and connect your web2 and web3 accounts to your NFMe ID, each mint boosts your total rewards.
            </Text>
          </Box>
        </Flex>
      </Box>

      <Box>
        <Image
          mt="10"
          boxSize="100%"
          height="auto"
          src={colorMode === "light" ? liteNfMeIDVaultHero : darkNfMeIDVaultHero}
          alt="NFMeID Vault Hero"
          borderRadius="lg"
        />
      </Box>

      <Flex
        bgGradient={colorMode === "light" ? "linear(to-b, white, #00C79730, white)" : "linear(to-b, bgDark, #00C79730, bgDark)"}
        flexDirection="column"
        justifyContent="center"
        alignItems="center"
        textAlign="center"
        p="5">
        <Heading as="h2" textAlign="center" mb={5} fontFamily="Clash-Medium">
          Get Started!
        </Heading>

        <ClaimCTAs onShowConnectWalletModal={onShowConnectWalletModal} />
      </Flex>
    </Box>
  );
};

const ClaimCTAs = ({ onShowConnectWalletModal }: { onShowConnectWalletModal?: any }) => {
  const { connected: connectedSolWallet } = useWallet();
  const navigate = useNavigate();

  return (
    <Flex flexDirection={{ base: "column", md: "row" }} justifyContent="space-around" alignItems="center">
      <Flex flexDirection="column" justifyContent="space-between" my={{ base: "5", md: "0" }}>
        <Box h="100px">
          <Image m="auto" mt="10px" boxSize="73px" height="auto" src={solIcon} alt="Solana" borderRadius="lg" />
        </Box>
        <Spacer />
        <Flex flexDirection="column" gap={4} mt={4}>
          {!connectedSolWallet && (
            <Button
              m="auto"
              variant="solid"
              colorScheme="teal"
              px={7}
              py={6}
              rounded="lg"
              size={connectedSolWallet ? "xl" : "xl"}
              w="100%"
              onClick={() => {
                gtagGo("nfm", "mint", "sol");

                onShowConnectWalletModal();
              }}>
              Login via Wallet to Start
            </Button>
          )}

          {connectedSolWallet && (
            <NFMeIDMintOptions
              onFreeMint={() => {
                navigate("/mintdata?launchTemplate=nfMeIdFreeMint");
              }}
              onMintAndBond={() => {
                navigate("/mintdata?launchTemplate=nfMeIdWithBond");
              }}
            />
          )}

          {connectedSolWallet && (
            <Button
              m="auto"
              variant="outline"
              colorScheme="teal"
              px={7}
              py={6}
              rounded="md"
              size="xl"
              w="100%"
              onClick={() => {
                navigate("/dashboard");
              }}>
              Go To Dashboard for More Guidance
            </Button>
          )}
        </Flex>
      </Flex>
    </Flex>
  );
};
